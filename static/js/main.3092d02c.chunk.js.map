{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","str","setStr","stringArray","split","firstItem","quontity","filter","s","length","className","style","padding","fontSize","fontWeight","placeholder","rows","value","type","onChange","e","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAkDeA,EA/CF,WAEX,IAFiB,EAcMC,mBAAS,IAdf,mBAcVC,EAdU,KAcJC,EAdI,KAgBXC,EAAcF,EAAIG,MAAM,MACxBC,EAAYF,EAAY,GACxBG,EAAWH,EAAYI,QAAO,SAAAC,GAAC,OAAIA,IAAMH,KAAWI,OAG1D,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKC,MArBQ,CACfC,QAAS,OACTC,SAAU,OACVC,WAAY,QAkBV,sBAGA,0BACEC,YAAY,iGAGZC,KAAK,KACLC,MAAOhB,EACPiB,KAAK,OACLC,SAAU,SAAAC,GAAC,OAAIlB,EAAOkB,EAAEC,OAAOJ,UAGjC,8EAEI,sBAAMN,MA9BO,CACnBC,QAAS,OACTC,SAAU,OACVC,WAAY,QA2BN,SACW,KAARb,EAAa,EAAIK,OAGxB,wBAAQgB,QAAS,kBAAMpB,EAAO,KAA9B,iCCjCSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3092d02c.chunk.js","sourcesContent":["import './App.css'\nimport React, { useState } from 'react'\n\n const App = () => {\n\n  const appStyle = {\n    padding: '60px', \n    fontSize: '30px', \n    fontWeight: 'bold'\n  }\n\n  const counterStyle = {\n    padding: '20px', \n    fontSize: '20px', \n    fontWeight: 'bold'\n  }\n\n  const [str , setStr] = useState('')\n\n  const stringArray = str.split('\\n')\n  const firstItem = stringArray[0]\n  const quontity = stringArray.filter(s => s === firstItem).length\n   \n     \n  return (\n    <div className=\"App\">\n      <div style = {appStyle}>\n       SOME APP\n      </div>\n      <textarea \n        placeholder='Enter some lines and enjoy the miracle...\n        \n        By the way do not forget to split lines with \"Enter\"' \n        rows='15' \n        value={str} \n        type='text' \n        onChange={e => setStr(e.target.value)} \n        >\n        </textarea>\n      <div>\n        See, how many times the first line appears: \n          <span style = {counterStyle}>\n            {str === '' ? 0 : quontity}\n          </span> \n      </div>\n      <button onClick={() => setStr('')}>Clear text area</button>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}